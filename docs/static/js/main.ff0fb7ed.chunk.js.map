{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","key","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","console","log","then","setTimeout","useFechGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAMaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OAEI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAKlB,SACG,uBACKO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCXlBG,EAAO,uCAAG,WAAMC,EAASC,GAAf,uBAAAC,EAAA,6DAGbC,EAHa,iDAGmCC,UAAUJ,GAH7C,6BAG2EC,GAH3E,SAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAMEA,EAAKC,OANP,uBAMZC,EANY,EAMZA,KAGDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EAExB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAdvB,kBAqBXM,GArBW,4CAAH,wDCEPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC/B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCDHO,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAAc,ECFb,SAACA,GAEvB,IAFmC,EAITd,mBAAS,CAC/BsB,KAAK,GACLa,SAAS,IANsB,mBAI5BC,EAJ4B,KAIrBC,EAJqB,KA+BnC,OAtBDC,qBAAU,WACLC,QAAQC,IAAI1B,GACZD,EAAQC,EATA,oCASc2B,MAAK,SAACb,GACxBc,YAAW,WACPL,EAAS,CACLf,KAAKM,EACLO,SAAQ,MAGd,UAIR,CAACrB,IASIsB,ED1BuBO,CAAY7B,GAA9Bc,EAHuB,EAG5BN,KAAYa,EAHgB,EAGhBA,QAmBnB,OACI,qCACE,oBAAIJ,UAAU,oCAAd,SAAoDjB,IACnDqB,GAAW,sBAAMJ,UAAU,mCAAhB,yBACX,qBAAKA,UAAU,YAAf,SAOUH,EAAOJ,KAAI,SAACC,GACR,OACG,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEcnCkB,EAjDM,WAAK,MAKc5C,mBAAS,CAAC,gBALxB,mBAKf6C,EALe,KAKH9C,EALG,KAsBtB,OACI,qCACK,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ8C,EAAWrB,KAAI,SAAAV,GACX,OACG,cAAC,EAAD,CAECA,SAAUA,GADLA,Y,YChClCgC,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.ff0fb7ed.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n//Hay que hacer una desestructuracion si quiero trabajar con setCategories directamente\r\n// porque sino tendria que trabajar con el objeto props es decir props.setCategories..\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('') // '' porque sino le paso nada seria undefined\r\n\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e)  => {\r\n        e.preventDefault(); // Prevenir el comportamiento por defecto\r\n        if(inputValue.trim().length > 2)\r\n        {\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue('');\r\n        }\r\n    };\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n           <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n                \r\n           />\r\n        </form>\r\n      \r\n    )\r\n\r\n  \r\n}\r\nAddCategory.propTypes ={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category,key) =>{\r\n\r\n    //Cada vez que react note un cambio en el componente se dispara las funciones que llamamos\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${key}`;\r\n    const resp = await fetch(url);\r\n\r\n    const {data} = await resp.json();\r\n\r\n    //console.log(data);\r\n    const gifs = data.map(img =>{\r\n        \r\n        return {\r\n            id: img.id,\r\n            title :img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n        \r\n    }\r\n    )\r\n\r\n   \r\n    return (gifs); \r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFechGifs } from '../hooks/useFetchGifs';\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [state, setstate] = useState(0);\r\n    const {data:images,loading} = useFechGifs(category);\r\n\r\n    \r\n\r\n    /*const [images, setImages] = useState([]);\r\n\r\n    const key = 'SO98IHqs4bWG6mXop10oEHzd1qrt2b2o'\r\n    useEffect(()=>{\r\n        getGifs(category,key).then((images)=>{\r\n            setImages(images);\r\n        });\r\n    },[category]);\r\n    */\r\n\r\n    \r\n    /*console.log('Hubo un cambio');\r\n    const prueba = ()=>{\r\n        console.log('Esto no se llama');\r\n    }*/\r\n    return (\r\n        <>\r\n          <h3 className='animate__animated animate__fadeIn' >{category}</h3>\r\n          {loading && <span className='animate__animated animate__flash'>Cargando...</span>}\r\n           <div className='card-grid'>\r\n            {/* {state}\r\n            <button onClick={() => setstate(state +1)}>Prueba</button>\r\n            */}\r\n          \r\n\r\n                {\r\n                     images.map((img) =>{\r\n                         return (\r\n                            <GifGridItem key={img.id} {...img} />\r\n                             \r\n                         );\r\n                     })\r\n                 }\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\n\r\n//podemos enviar un objeto completo","import {useState,useEffect} from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFechGifs =(category) =>{\r\n\r\n    const key = 'SO98IHqs4bWG6mXop10oEHzd1qrt2b2o';\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n   useEffect(()=>{\r\n        console.log(category);\r\n        getGifs(category,key).then((images)=>{\r\n            setTimeout(()=>{\r\n                setState({\r\n                    data:images,\r\n                    loading:false\r\n                })\r\n                //console.log(images);\r\n            },3000);\r\n           \r\n        });\r\n\r\n    },[category]);\r\n    \r\n    /*setTimeout(()=>{\r\n        setstate({\r\n            data:[1,2,3,4,5,6,7],\r\n            loading:false\r\n        })\r\n    },3000)\r\n    */\r\n    return state; // {data:[],loading:true}\r\n};","import React,{useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n//import PropTypes from 'prop-types';\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n    //const categories = ['One Punch','Samurai X','Dragon Ball'];\r\n    //Hooks useState\r\n\r\n    const [categories, setCategories] = useState(['Dragon Ball']);\r\n\r\n    /*const handleAdd = (event) =>{\r\n        //setCategories([...categories,'HunterXHunter']);\r\n        //setCategories(cats =>{\r\n            \r\n            //console.log(cats);\r\n        //    let temp = [...cats];\r\n         //   temp.push('HunterXHunter')\r\n         //   return temp;\r\n        //});\r\n       \r\n       setCategories(cats => [...cats,'HunterXHunter']);\r\n    };\r\n    */\r\n    \r\n    // Se le puede pasar propiedades a los componentes hijos\r\n    return (\r\n        <>\r\n             <h2>GifExpertApp</h2>\r\n             <AddCategory setCategories={setCategories} />\r\n             <hr/>\r\n             {/*<button onClick={handleAdd}>Agregar</button>*/}\r\n             <ol>\r\n                 {\r\n                     categories.map(category =>{\r\n                         return (\r\n                            <GifGrid\r\n                             key={category} \r\n                             category={category}/>\r\n                         );\r\n                     })\r\n                 }\r\n             </ol>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n/*GifExpertApp.propTypes ={\r\n    value: PropTypes.number\r\n}\r\n*/\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\nimport 'animate.css';\n\nReactDOM.render(\n\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}